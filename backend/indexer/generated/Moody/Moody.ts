// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MoodUploaded extends ethereum.Event {
  get params(): MoodUploaded__Params {
    return new MoodUploaded__Params(this);
  }
}

export class MoodUploaded__Params {
  _event: MoodUploaded;

  constructor(event: MoodUploaded) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hash(): string {
    return this._event.parameters[1].value.toString();
  }

  get message(): string {
    return this._event.parameters[2].value.toString();
  }

  get category(): string {
    return this._event.parameters[3].value.toString();
  }

  get date(): string {
    return this._event.parameters[4].value.toString();
  }

  get author(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class Moody__moodsResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: Address;

  constructor(
    value0: BigInt,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getHash(): string {
    return this.value1;
  }

  getMessage(): string {
    return this.value2;
  }

  getCategory(): string {
    return this.value3;
  }

  getDate(): string {
    return this.value4;
  }

  getAuthor(): Address {
    return this.value5;
  }
}

export class Moody extends ethereum.SmartContract {
  static bind(address: Address): Moody {
    return new Moody("Moody", address);
  }

  moodCount(): BigInt {
    let result = super.call("moodCount", "moodCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_moodCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("moodCount", "moodCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moods(param0: BigInt): Moody__moodsResult {
    let result = super.call(
      "moods",
      "moods(uint256):(uint256,string,string,string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Moody__moodsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toAddress()
    );
  }

  try_moods(param0: BigInt): ethereum.CallResult<Moody__moodsResult> {
    let result = super.tryCall(
      "moods",
      "moods(uint256):(uint256,string,string,string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Moody__moodsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toAddress()
      )
    );
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class UploadMoodCall extends ethereum.Call {
  get inputs(): UploadMoodCall__Inputs {
    return new UploadMoodCall__Inputs(this);
  }

  get outputs(): UploadMoodCall__Outputs {
    return new UploadMoodCall__Outputs(this);
  }
}

export class UploadMoodCall__Inputs {
  _call: UploadMoodCall;

  constructor(call: UploadMoodCall) {
    this._call = call;
  }

  get _moodHash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _message(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _category(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _date(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UploadMoodCall__Outputs {
  _call: UploadMoodCall;

  constructor(call: UploadMoodCall) {
    this._call = call;
  }
}
